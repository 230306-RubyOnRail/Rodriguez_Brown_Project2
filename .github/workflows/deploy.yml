

name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
#    - name: Docker Login
#      uses: docker/login-action@v2
#      with:
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_TOKEN }}

#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v2
        
#    - name: Build and push
#      uses: docker/build-push-action@v4
#      with:
#        context: .
#        file: ./Dockerfile
#        push: true
#        tags: ${{ secrets.DOCKER_USERNAME }}/ruby_project2:latest
    
    - name: SSH into EC2
      run: |
        touch creds.pem
        echo "${{ secrets.EC2_KEY }}" >> creds.pem
        chmod 400 creds.pem
        ssh -i creds.pem -t -t -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_ADDRESS }}
        ls
        docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/ruby_project2:latest
        docker stop -a
        docker run -d -p 3000:3000 ruby_project2:latest
        screen -d -m
        exit
        
#    - name: Docker Login from SSH
#      uses: docker/login-action@v2
#      with:
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_TOKEN }}
    
#    - name: Pull Image
#      run: |
#        docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/ruby_project2:latest
      
#    - name: Execute Image
#      run: |
#        docker stop -a
#        docker run -d -p 3000:3000 ruby_project2:latest
#        screen -d -m

#    - name: ls -a via ssh
#      uses: garygrossgarten/github-action-ssh@release
#      with:
#        command: |
#          docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/ruby_project2:latest
#          docker stop -a
#          docker run -d -p 3000:3000 ruby_project2:latest
#          screen -d -m
#        host: ${{ secrets.EC2_ADDRESS }}
#        username: ${{ secrets.EC2_USERNAME }}
#        privateKey: ${{ secrets.EC2_KEY}}

#    - name: Configure SSH
#      run: |
#        mkdir -p ~/.ssh/
#        echo "$SSH_KEY" > ~/.ssh/staging.key
#        chmod 600 ~/.ssh/staging.key
#        cat >>~/.ssh/config <<END
#        Host staging
#          HostName $SSH_HOST
#          User $SSH_USER
#          IdentityFile ~/.ssh/staging.key
#          StrictHostKeyChecking no
#        END
#      env:
#        SSH_USER: ${{ secrets.EC2_USERNAME }}
#        SSH_KEY: ${{ secrets.EC2_KEY }}
#        SSH_HOST: ${{ secrets.EC2_ADDRESS }}
